rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId, docData) {
      return docData.permissions[userId].role == 'owner';
    }

    function isEditor(userId, docData) {
      return docData.permissions[userId].role == 'editor';
    }
    
    function canRead(userId, docData) {
      return docData.permissions[userId] != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // USER DOCUMENT RULES
    match /users/{docUserId} {
      allow read: if isSignedIn() && (
                    // Can read your own doc
                    request.auth.uid == docUserId ||
                    // Can read the doc you have been granted access to
                    (getUserData(request.auth.uid).pointerToCorpsData == docUserId) ||
                    // Can read if you are in the permissions list of that doc
                    canRead(request.auth.uid, resource.data)
                  );

      allow create: if isSignedIn() && request.auth.uid == docUserId;

      allow update: if isSignedIn() && (
                      // Can update your own doc (e.g., to add a pointer)
                      request.auth.uid == docUserId ||
                      // Can update the doc you are an editor/owner of
                      isOwner(request.auth.uid, resource.data) || isEditor(request.auth.uid, resource.data)
                    );
                    
      allow delete: if false; // Prevent client-side deletion
    }

    // INVITE DOCUMENT RULES
    match /invites/{inviteId} {
      function incomingInvite() {
        return request.resource.data;
      }

      // Only an owner of the target corps data can create an invite
      allow create: if isSignedIn() && isOwner(request.auth.uid, getUserData(incomingInvite().corpsDataOwnerId));

      // Only the sender or the intended recipient can read the invite
      allow read: if isSignedIn() && 
                    (request.auth.uid == resource.data.corpsDataOwnerId || request.auth.email == resource.data.inviteeEmail);

      // Only the invitee can update it to "accepted", and only the owner can update it to "processed"
      allow update: if isSignedIn() && (
                      (request.auth.email == resource.data.inviteeEmail && incomingInvite().status == 'accepted') ||
                      (request.auth.uid == resource.data.corpsDataOwnerId && incomingInvite().status == 'processed')
                    );

      allow delete: if false; // Prevent client-side deletion
    }
  }
}
